name: release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/**'

permissions: read-all

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b  # v3
    - uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912  # v3
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Sets env var for release
      if: ${{ matrix.os == 'macos-latest' && matrix.python == '3.7' }}
      run: |
        # NO_PROXY is needed to call requests API within a forked process
        # when using macOS and python version 3.7
        echo "NO_PROXY='*'" >> $GITHUB_ENV
    - name: Run tests
      run: pytest --strict-markers -W ignore::UserWarning tests

  bump-version:
    # Run tests before bumping
    needs: tests
    runs-on: [self-hosted, public, linux, x64]
    environment: release
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b  # v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
      - name: Set up Python 3.7
        uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912  # v3
        with:
          python-version: 3.7
      - name: bump version
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest tag: $latest_tag"
          new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
          echo "new tag: $new_tag"

          ## update package version
          echo "VERSION = '$new_tag'" > 'detect_secrets/__version__.py'

          git commit -m "publish version ${new_tag} [skip ci]" detect_secrets/__version__.py || echo "No changes to commit"
          git push origin
          git tag $new_tag
          git push origin $new_tag

          echo "version=$new_tag" >> $GITHUB_OUTPUT
      - name: create python package
        run: |
          python -m pip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@c7f29f7adef1a245bd91520e94867e5c6eedddcc  # v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
      - name: sleep and wait for package to refresh
        run: |
          sleep 2m

  create-pr:
    needs: bump-version
    runs-on: [self-hosted, public, linux, x64]
    environment: release
    env:
      PYTHON_VERSION: "3.7"
    steps:
      - name: Checkout checkov
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b  # v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: bridgecrewio/checkov
      - uses: actions/setup-python@5ccb29d8773c3f3f653e1705f474dfaa8a06a912  # v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Prepare PR
        run: |
          # install needed tools
          python -m pip install --no-cache-dir --upgrade pipenv "pipenv-setup[black]" "vistir<0.7.0"

          # update Pipfile
          pipenv --python ${{ env.PYTHON_VERSION }}
          pipenv install bc-detect-secrets==${{ needs.bump-version.outputs.version }}
          pipenv lock

          # update setup.py
          pipenv-setup sync --pipfile
      - name: Create PR
        uses: peter-evans/create-pull-request@284f54f989303d2699d373481a0cfa13ad5a6666  # v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
          branch: update-detect-secrets-dep
          delete-branch: true
          commit-message: update bc-detect-secrets version
          title: "chore: update bc-detect-secrets version to ${{ needs.bump-version.outputs.version }}"
          body: |
            - Automatic update of bc-detect-secrets

            powered by [create-pull-request](https://github.com/peter-evans/create-pull-request) GHA
